name: Build Test Framework

on:
  push:
    branches:
      - '**'
    paths-ignore:
      - '**.md'
      - 'LICENSE'
      - 'README.md'
      - 'docs/**'
      - '*.txt'
  pull_request:
    branches:
      - '**'
    paths-ignore:
      - '**.md'
      - 'LICENSE'
      - 'README.md'
      - 'docs/**'
      - '*.txt'
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  DOTNET_VERSION: '8.0.x'
  CONFIGURATION: Release
  SOLUTION_FILE: SdkTestAutomation.sln

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}

    - name: Setup Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.19'
        cache: true
        cache-dependency-path: SdkTestAutomation.Sdk/Implementations/Go/go-src/go.sum

    - name: Setup Java
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '17'

    - name: Build Dependencies
      run: |
        # Build Go shared library
        cd SdkTestAutomation.Sdk/Implementations/Go/go-src
        [ ! -f "go.mod" ] && go mod init conductor-go-bridge
        go get github.com/conductor-sdk/conductor-go@latest
        go mod tidy
        CGO_ENABLED=1 GOOS=linux GOARCH=amd64 go build -buildmode=c-shared -o "../build-artifacts/conductor-go-bridge.so" conductor-go-bridge.go
        
        # Build Java CLI applications
        cd ../../Java/cli-java-sdk
        mvn clean package -q
        
        # Copy JARs to output directories
        mkdir -p ../../../bin/{Debug,Release}/net8.0/lib
        cp target/conductor-java-cli.jar ../../../bin/Debug/net8.0/lib/conductor-client.jar
        cp target/conductor-java-cli.jar ../../../bin/Release/net8.0/lib/conductor-client.jar
        cp target/orkes-java-cli.jar ../../../bin/Debug/net8.0/lib/orkes-conductor-client.jar
        cp target/orkes-java-cli.jar ../../../bin/Release/net8.0/lib/orkes-conductor-client.jar

    - name: Build .NET Solution
      run: |
        dotnet restore ${{ env.SOLUTION_FILE }} --verbosity minimal
        dotnet build ${{ env.SOLUTION_FILE }} --configuration ${{ env.CONFIGURATION }} --no-restore --verbosity minimal

    - name: Verify Build
      run: |
        # Verify .NET projects
        for project in SdkTestAutomation.{Core,Api,Sdk,Utils,Tests}; do
          [ -f "$project/bin/${{ env.CONFIGURATION }}/net8.0/$project.dll" ] || exit 1
        done
        
        # Verify dependencies
        [ -f "SdkTestAutomation.Sdk/Implementations/Go/build-artifacts/conductor-go-bridge.so" ] || exit 1
        [ -f "SdkTestAutomation.Sdk/bin/${{ env.CONFIGURATION }}/net8.0/lib/conductor-client.jar" ] || exit 1
        [ -f "SdkTestAutomation.Sdk/bin/${{ env.CONFIGURATION }}/net8.0/lib/orkes-conductor-client.jar" ] || exit 1

    - name: Build Summary
      if: always()
      run: |
        echo "## Build Summary" >> $GITHUB_STEP_SUMMARY
        echo "- **Solution**: ${{ env.SOLUTION_FILE }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Configuration**: ${{ env.CONFIGURATION }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Framework**: .NET 8.0" >> $GITHUB_STEP_SUMMARY
        echo "- **Dependencies**: Go shared library, Java CLI applications" >> $GITHUB_STEP_SUMMARY
        echo "**ðŸŽ‰ Build completed successfully!**" >> $GITHUB_STEP_SUMMARY 