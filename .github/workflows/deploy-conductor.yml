name: Deploy Conductor

on:
  workflow_call:

permissions:
  contents: read

env:
  CONDUCTOR_REPO: conductor-oss/conductor
  CONDUCTOR_BRANCH: main
  CONDUCTOR_API_URL: http://localhost:8080/api

jobs:
  deploy-conductor:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Conductor Repository
        uses: actions/checkout@v4
        with:
          repository: ${{ env.CONDUCTOR_REPO }}
          ref: ${{ env.CONDUCTOR_BRANCH }}
          path: conductor

      - name: Start Conductor Services
        working-directory: conductor
        run: |
          echo "Starting Conductor services..."
          docker compose -f docker/docker-compose.yaml up -d
          
          if ! docker compose -f docker/docker-compose.yaml ps --services | grep -q "redis\|elasticsearch\|conductor-server"; then
            echo "ERROR: Failed to start required services"
            docker compose -f docker/docker-compose.yaml ps
            docker compose -f docker/docker-compose.yaml logs
            exit 1
          fi

      - name: Wait for Conductor to be ready
        working-directory: conductor
        run: |
          echo "Starting health check for Conductor API..."
          
          echo "Waiting for services to initialize..."
          sleep 30
          
          echo "Checking core services..."
          for service in redis elasticsearch conductor-server; do
            if ! docker compose -f docker/docker-compose.yaml ps --services --filter "status=running" | grep -q "$service"; then
              echo "ERROR: $service is not running"
              docker compose -f docker/docker-compose.yaml ps
              docker compose -f docker/docker-compose.yaml logs "$service"
              exit 1
            fi
          done
          
          echo "Waiting for API to be healthy..."
          timeout=250
          until curl -s -f ${{ env.CONDUCTOR_API_URL }}/health > /dev/null 2>&1 || [ $timeout -le 0 ]; do
            echo "Health check failed. Retrying in 5s... (${timeout}s remaining)"
            sleep 5
            timeout=$((timeout-5))
            
            if [ $timeout -le 0 ]; then
              echo "ERROR: Conductor API failed to become healthy"
              docker compose -f docker/docker-compose.yaml ps
              docker compose -f docker/docker-compose.yaml logs
              exit 1
            fi
          done
          
          echo "SUCCESS: Conductor API is ready!"

      - name: Display Container Status
        if: always()
        run: |
          echo "Container Status:"
          docker compose -f conductor/docker/docker-compose.yaml ps

      - name: Cleanup on Failure
        if: failure()
        working-directory: conductor
        run: |
          echo "Stopping and removing Conductor containers..."
          docker compose -f docker/docker-compose.yaml down 