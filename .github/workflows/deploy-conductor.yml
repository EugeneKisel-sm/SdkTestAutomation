name: Deploy Conductor

on:
  workflow_call:

permissions:
  contents: read

env:
  CONDUCTOR_REPO: conductor-oss/conductor
  CONDUCTOR_BRANCH: main
  CONDUCTOR_API_URL: http://localhost:8080
  DOCKER_COMPOSE_FILE: docker/docker-compose.yaml

jobs:
  deploy-conductor:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Conductor Repository
        uses: actions/checkout@v4
        with:
          repository: ${{ env.CONDUCTOR_REPO }}
          ref: ${{ env.CONDUCTOR_BRANCH }}
          path: conductor

      - name: Start Conductor Services
        working-directory: conductor
        run: |
          echo "Starting Conductor services..."
          docker compose -f ${{ env.DOCKER_COMPOSE_FILE }} up -d
          
          if ! docker compose -f ${{ env.DOCKER_COMPOSE_FILE }} ps --services | grep -q "redis\|elasticsearch\|conductor-server"; then
            echo "ERROR: Failed to start required services"
            docker compose -f ${{ env.DOCKER_COMPOSE_FILE }} ps
            docker compose -f ${{ env.DOCKER_COMPOSE_FILE }} logs
            exit 1
          fi

      - name: Wait for Conductor to be ready
        working-directory: conductor
        run: |
          echo "Starting health check for Conductor API..."
          echo "Waiting for services to initialize..."
          sleep 30
          
          echo "Verifying services health..."
          if ! docker compose -f ${{ env.DOCKER_COMPOSE_FILE }} ps | grep -q "healthy"; then
            echo "ERROR: Services are not healthy"
            docker compose -f ${{ env.DOCKER_COMPOSE_FILE }} ps
            docker compose -f ${{ env.DOCKER_COMPOSE_FILE }} logs
            exit 1
          fi
          
          echo "Verifying API port is accessible..."
          if ! nc -z localhost 8080; then
            echo "ERROR: Port 8080 is not accessible"
            docker compose -f ${{ env.DOCKER_COMPOSE_FILE }} logs conductor-server
            exit 1
          fi
          
          echo "Waiting for API to be healthy..."
          timeout=200
          
          # Try both health endpoints since the location might vary by version
          until (curl -s ${{ env.CONDUCTOR_API_URL }}/health > /dev/null 2>&1 && echo "Health check succeeded") || \
                (curl -s ${{ env.CONDUCTOR_API_URL }}/api/health > /dev/null 2>&1 && echo "Health check succeeded") || \
                [ $timeout -le 0 ]; do
            echo "Health check failed. Retrying in 10s... (${timeout}s remaining)"
            
            if [ $((timeout % 30)) -eq 0 ]; then
              echo "Current status:"
              docker compose -f ${{ env.DOCKER_COMPOSE_FILE }} ps
              echo "Testing both health endpoints:"
              echo "1. /health endpoint:"
              curl -v ${{ env.CONDUCTOR_API_URL }}/health || true
              echo "2. /api/health endpoint:"
              curl -v ${{ env.CONDUCTOR_API_URL }}/api/health || true
              echo "Recent server logs:"
              docker compose -f ${{ env.DOCKER_COMPOSE_FILE }} logs --tail=20 conductor-server
            fi
            
            sleep 10
            timeout=$((timeout-10))
          done
          
          if [ $timeout -le 0 ]; then
            echo "ERROR: Conductor API failed to become healthy"
            docker compose -f ${{ env.DOCKER_COMPOSE_FILE }} ps
            docker compose -f ${{ env.DOCKER_COMPOSE_FILE }} logs conductor-server
            echo "Final health check attempts:"
            curl -v ${{ env.CONDUCTOR_API_URL }}/health || true
            curl -v ${{ env.CONDUCTOR_API_URL }}/api/health || true
            exit 1
          fi
          
          echo "SUCCESS: Conductor API is ready!"

      - name: Cleanup on Failure
        if: failure()
        working-directory: conductor
        run: |
          docker compose -f ${{ env.DOCKER_COMPOSE_FILE }} down 