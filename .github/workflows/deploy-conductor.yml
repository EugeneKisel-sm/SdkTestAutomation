name: Deploy Conductor

on:
  workflow_call:

permissions:
  contents: read

env:
  CONDUCTOR_REPO: conductor-oss/conductor
  CONDUCTOR_BRANCH: main
  CONDUCTOR_API_URL: http://localhost:8080/api

jobs:
  deploy-conductor:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Conductor Repository
        uses: actions/checkout@v4
        with:
          repository: ${{ env.CONDUCTOR_REPO }}
          ref: ${{ env.CONDUCTOR_BRANCH }}
          path: conductor

      - name: Start Conductor Services
        working-directory: conductor
        run: |
          echo "Starting Conductor services..."
          docker compose -f docker/docker-compose.yaml up -d
          
      - name: Wait for Conductor to be ready
        working-directory: conductor
        run: |
          echo "Starting health check for Conductor API (timeout: 3 minutes)..."
          
          echo "Waiting 30 seconds for initial service startup..."
          sleep 30
          
          echo "Checking Redis status..."
          if ! docker compose -f docker/docker-compose.yaml exec -T redis redis-cli ping; then
            echo "ERROR: Redis is not responding"
            docker compose -f docker/docker-compose.yaml logs redis
            exit 1
          fi
          
          if ! curl -s http://localhost:9200/_cluster/health | grep -q '"status":"green\|yellow"'; then
            echo "ERROR: Elasticsearch is not healthy"
            docker compose -f docker/docker-compose.yaml logs elasticsearch
            exit 1
          fi
          
          timeout=180
          until curl -s -f ${{ env.CONDUCTOR_API_URL }}/health || [ $timeout -le 0 ]; do
            echo "Health check attempt failed. Retrying in 5 seconds... ($timeout seconds remaining)"
            
            if [ $((timeout % 30)) -eq 0 ]; then
              echo "Current container status:"
              docker compose -f docker/docker-compose.yaml ps
              echo "Recent conductor-server logs:"
              docker compose -f docker/docker-compose.yaml logs --tail=50 conductor-server
            fi
            
            sleep 5
            timeout=$((timeout-5))
          done
          
          if [ $timeout -le 0 ]; then
            echo "ERROR: Conductor failed to start within timeout"
            echo "Final container status:"
            docker compose -f docker/docker-compose.yaml ps
            echo "Full conductor-server logs:"
            docker compose -f docker/docker-compose.yaml logs conductor-server
            exit 1
          fi
          
          echo
          echo "SUCCESS: Conductor API is ready and healthy!"
          curl -s ${{ env.CONDUCTOR_API_URL }}/health

      - name: Display Container Status
        if: always()
        run: |
          echo "Container Status:"
          docker compose -f conductor/docker/docker-compose.yaml ps

      - name: Cleanup on Failure
        if: failure()
        working-directory: conductor
        run: |
          echo "Stopping and removing Conductor containers..."
          docker compose -f docker/docker-compose.yaml down 