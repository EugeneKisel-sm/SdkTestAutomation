name: Deploy Conductor

on:
  workflow_call:

permissions:
  contents: read

env:
  CONDUCTOR_REPO: conductor-oss/conductor
  CONDUCTOR_BRANCH: main
  DOCKER_COMPOSE_FILE: docker/docker-compose.yaml
  NETWORK_NAME: conductor-test-network

jobs:
  deploy-conductor:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Conductor Repository
        uses: actions/checkout@v4
        with:
          repository: ${{ env.CONDUCTOR_REPO }}
          ref: ${{ env.CONDUCTOR_BRANCH }}
          path: conductor

      - name: Create Docker Network
        run: docker network create ${{ env.NETWORK_NAME }}

      - name: Start Conductor Services
        working-directory: conductor
        run: |
          # Check current network configuration
          echo "Current network configuration:"
          grep -A 5 "^networks:" ${{ env.DOCKER_COMPOSE_FILE }} || true
          
          # Update network configuration
          if grep -q "^networks:" ${{ env.DOCKER_COMPOSE_FILE }}; then
            # Replace existing network configuration
            sed -i '/^networks:/,/^[^ ]/c\networks:\n  default:\n    name: conductor-test-network\n    external: true\n' ${{ env.DOCKER_COMPOSE_FILE }}
          else
            # Add new network configuration
            cat >> ${{ env.DOCKER_COMPOSE_FILE }} << EOL
          networks:
            default:
              name: conductor-test-network
              external: true
          EOL
          fi
          
          echo "Updated network configuration:"
          grep -A 5 "^networks:" ${{ env.DOCKER_COMPOSE_FILE }}
          
          docker compose -f ${{ env.DOCKER_COMPOSE_FILE }} up -d
          
          if ! docker compose -f ${{ env.DOCKER_COMPOSE_FILE }} ps --services | grep -q "conductor-server"; then
            echo "ERROR: Failed to start conductor-server"
            docker compose -f ${{ env.DOCKER_COMPOSE_FILE }} ps
            docker compose -f ${{ env.DOCKER_COMPOSE_FILE }} logs
            exit 1
          fi

      - name: Wait for Conductor to be ready
        working-directory: conductor
        run: |
          echo "Waiting for services to initialize..."
          sleep 30
          
          if ! docker compose -f ${{ env.DOCKER_COMPOSE_FILE }} ps | grep -q "healthy"; then
            echo "ERROR: Services are not healthy"
            docker compose -f ${{ env.DOCKER_COMPOSE_FILE }} ps
            docker compose -f ${{ env.DOCKER_COMPOSE_FILE }} logs
            exit 1
          fi
          
          timeout=200
          until (curl -s http://localhost:8080/api/health > /dev/null 2>&1) || \
                [ $timeout -le 0 ]; do
          
            if [ $((timeout % 30)) -eq 0 ]; then
              echo "Services status (${timeout}s remaining):"
              docker compose -f ${{ env.DOCKER_COMPOSE_FILE }} ps
              docker compose -f ${{ env.DOCKER_COMPOSE_FILE }} logs --tail=20 conductor-server
            fi
            
            echo "Waiting for API... (${timeout}s remaining)"
            sleep 10
            timeout=$((timeout-10))
          done
          
          if [ $timeout -le 0 ]; then
            echo "ERROR: Conductor API failed to become healthy"
            docker compose -f ${{ env.DOCKER_COMPOSE_FILE }} ps
            docker compose -f ${{ env.DOCKER_COMPOSE_FILE }} logs conductor-server
            exit 1
          fi
          
          echo "SUCCESS: Conductor API is ready!"

      - name: Cleanup on Failure
        if: failure()
        working-directory: conductor
        run: |
          docker compose -f ${{ env.DOCKER_COMPOSE_FILE }} down
          docker network rm ${{ env.NETWORK_NAME }} || true 