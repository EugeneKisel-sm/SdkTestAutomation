name: Deploy Conductor

on:
  workflow_call:

permissions:
  contents: read

env:
  CONDUCTOR_REPO: conductor-oss/conductor
  CONDUCTOR_BRANCH: main
  DOCKER_COMPOSE_FILE: docker/docker-compose.yaml

jobs:
  deploy-conductor:
    runs-on: ubuntu-latest
    container:
      image: mcr.microsoft.com/dotnet/sdk:8.0
      options: --user root
    steps:
      - name: Checkout Conductor Repository
        uses: actions/checkout@v4
        with:
          repository: ${{ env.CONDUCTOR_REPO }}
          ref: ${{ env.CONDUCTOR_BRANCH }}
          path: conductor

      - name: Install Docker Compose
        run: |
          apt-get update
          apt-get install -y docker.io docker-compose-plugin
          systemctl start docker

      - name: Start Conductor Services
        working-directory: conductor
        run: |
          docker compose -f ${{ env.DOCKER_COMPOSE_FILE }} up -d
          
          if ! docker compose -f ${{ env.DOCKER_COMPOSE_FILE }} ps --services | grep -q "conductor-server"; then
            echo "ERROR: Failed to start conductor-server"
            docker compose -f ${{ env.DOCKER_COMPOSE_FILE }} ps
            docker compose -f ${{ env.DOCKER_COMPOSE_FILE }} logs
            exit 1
          fi

      - name: Wait for Conductor to be ready
        working-directory: conductor
        run: |
          echo "Waiting for services to initialize..."
          sleep 30
          
          if ! docker compose -f ${{ env.DOCKER_COMPOSE_FILE }} ps | grep -q "healthy"; then
            echo "ERROR: Services are not healthy"
            docker compose -f ${{ env.DOCKER_COMPOSE_FILE }} ps
            docker compose -f ${{ env.DOCKER_COMPOSE_FILE }} logs
            exit 1
          fi
          
          timeout=200
          until (curl -s http://localhost:8080/api/health > /dev/null 2>&1) || \
                [ $timeout -le 0 ]; do
            
            if [ $((timeout % 30)) -eq 0 ]; then
              echo "Services status (${timeout}s remaining):"
              docker compose -f ${{ env.DOCKER_COMPOSE_FILE }} ps
              docker compose -f ${{ env.DOCKER_COMPOSE_FILE }} logs --tail=20 conductor-server
            fi
            
            echo "Waiting for API... (${timeout}s remaining)"
            sleep 10
            timeout=$((timeout-10))
          done
          
          if [ $timeout -le 0 ]; then
            echo "ERROR: Conductor API failed to become healthy"
            docker compose -f ${{ env.DOCKER_COMPOSE_FILE }} ps
            docker compose -f ${{ env.DOCKER_COMPOSE_FILE }} logs conductor-server
            exit 1
          fi
          
          echo "SUCCESS: Conductor API is ready!"

      - name: Cleanup on Failure
        if: failure()
        working-directory: conductor
        run: docker compose -f ${{ env.DOCKER_COMPOSE_FILE }} down 